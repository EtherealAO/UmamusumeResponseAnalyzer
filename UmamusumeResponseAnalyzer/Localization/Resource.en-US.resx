<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfigSet_Events" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="ConfigSet_ParseFriendSearchResponse" xml:space="preserve">
    <value>ParseFriendSearchResponse</value>
  </data>
  <data name="ConfigSet_ParseSingleModeCheckEventResponse" xml:space="preserve">
    <value>ParseSingleModeCheckEventResponse</value>
  </data>
  <data name="ConfigSet_ParseTeamStadiumOpponentListResponse" xml:space="preserve">
    <value>ParseTeamStadiumOpponentListResponse</value>
  </data>
  <data name="ConfigSet_ParseTrainedCharaLoadResponse" xml:space="preserve">
    <value>ParseTrainedCharaLoadResponse</value>
  </data>
  <data name="LaunchMenu" xml:space="preserve">
    <value>Launch Menu(Use ↑&amp;↓ to select, enter to confirm)</value>
  </data>
  <data name="LaunchMenu_Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="LaunchMenu_Options_BackToMenuInstruction" xml:space="preserve">
    <value>Press any key to return main menu</value>
  </data>
  <data name="LaunchMenu_Options_Instruction" xml:space="preserve">
    <value>[grey](Press [blue]&lt;space&gt;[/] to toggle, [green]&lt;enter&gt;[/] to accept)[/]</value>
  </data>
  <data name="LaunchMenu_Start" xml:space="preserve">
    <value>Start!</value>
  </data>
  <data name="LaunchMenu_UpdateAssets" xml:space="preserve">
    <value>Update data</value>
  </data>
  <data name="LaunchMenu_Update_DownloadedInstruction" xml:space="preserve">
    <value>Download completed</value>
  </data>
  <data name="LaunchMenu_Update_DownloadEventsInstruction" xml:space="preserve">
    <value>Downloading events.json from GitHub</value>
  </data>
  <data name="LaunchMenu_Update_DownloadSuccessEventsInstruction" xml:space="preserve">
    <value>Downloading successevents.json from GitHub</value>
  </data>
  <data name="LaunchMenu_Start_Checking" xml:space="preserve">
    <value>[yellow]Check if umamusume.exe is running[/]</value>
  </data>
  <data name="LaunchMenu_Start_Checking_Log" xml:space="preserve">
    <value>[grey]LOG: [/] {0}</value>
  </data>
  <data name="LaunchMenu_Start_GetToken" xml:space="preserve">
    <value>[bold blue]Getting DMM Onetime Token[/]</value>
  </data>
  <data name="LaunchMenu_Start_Checking_Found" xml:space="preserve">
    <value>Found {0} running umamusume.exe</value>
  </data>
  <data name="LaunchMenu_Start_TokenGot" xml:space="preserve">
    <value>Get DMM Onetime Token Successfully</value>
  </data>
  <data name="LaunchMenu_Start_TokenFailed" xml:space="preserve">
    <value>Failed to get DMM Onetime Token</value>
  </data>
  <data name="LaunchMenu_Start_Launching" xml:space="preserve">
    <value>Launching umamusume.exe</value>
  </data>
  <data name="LaunchMenu_Start_Started" xml:space="preserve">
    <value>[bold green]Start Finished[/]</value>
  </data>
  <data name="LaunchMenu_Start_Checking_AlreadyRunning" xml:space="preserve">
    <value>umamusume.exe is detected, start server</value>
  </data>
  <data name="ConfigSet_ParsePracticeRaceRaceStartResponse" xml:space="preserve">
    <value>ParsePracticeRaceRaceStartResponse</value>
  </data>
  <data name="ConfigSet_ParseRoomMatchRaceStartResponse" xml:space="preserve">
    <value>ParseRoomMatchRaceStartResponse</value>
  </data>
  <data name="LaunchMenu_Update_DownloadNamesInstruction" xml:space="preserve">
    <value>Downloading names.json from GitHub</value>
  </data>
  <data name="LaunchMenu_Update_DownloadProgramInstruction" xml:space="preserve">
    <value>Downloading program from GitHub</value>
  </data>
  <data name="LaunchMenu_Update_BeginUpdateProgramInstruction" xml:space="preserve">
    <value>Press enter to update program</value>
  </data>
  <data name="LaunchMenu_Update_AlreadyLatestInstruction" xml:space="preserve">
    <value>Newer version of program not found</value>
  </data>
  <data name="LaunchMenu_Update_DownloadSkillDataInstruction" xml:space="preserve">
    <value>Downloading skilldata.json from GitHub</value>
  </data>
  <data name="ConfigSet_MaximiumGradeSkillRecommendation" xml:space="preserve">
    <value>MaximiumGradeSkillRecommendation</value>
  </data>
  <data name="ConfigSet_DMMLaunch" xml:space="preserve">
    <value>Launch game without opening DMM</value>
  </data>
  <data name="ConfigSet_EnableNetFilter" xml:space="preserve">
    <value>Enable game accelerator</value>
  </data>
  <data name="ConfigSet_ForceUseGithubToUpdate" xml:space="preserve">
    <value>Force use GitHub to update</value>
  </data>
  <data name="ConfigSet_ParseChampionsRaceStartResponse" xml:space="preserve">
    <value>ParseMonthlyRace</value>
  </data>
  <data name="ConfigSet_SaveResponseForDebug" xml:space="preserve">
    <value>Save packets for debugging</value>
  </data>
  <data name="ConfigSet_ShowCommandInfo" xml:space="preserve">
    <value>Show Command Info</value>
  </data>
  <data name="LaunchMenu_InstallNetFilterDriver" xml:space="preserve">
    <value>Install game accelerator driver</value>
  </data>
  <data name="LaunchMenu_SetNetfilterTarget" xml:space="preserve">
    <value>Set Accelerator Server</value>
  </data>
  <data name="LaunchMenu_SetNetfilterTarget_AskAuth" xml:space="preserve">
    <value>Does Proxy Server Requires Authentication</value>
  </data>
  <data name="LaunchMenu_SetNetfilterTarget_AskAuthPassword" xml:space="preserve">
    <value>Please input proxy password</value>
  </data>
  <data name="LaunchMenu_SetNetfilterTarget_AskAuthUsername" xml:space="preserve">
    <value>Please input proxy username</value>
  </data>
  <data name="LaunchMenu_SetNetfilterTarget_AskHost" xml:space="preserve">
    <value>Please input proxy server address</value>
  </data>
  <data name="LaunchMenu_SetNetfilterTarget_AskPort" xml:space="preserve">
    <value>Please input proxy server port</value>
  </data>
  <data name="LaunchMenu_UninstallNetFilterDriver" xml:space="preserve">
    <value>Uninstall game accelerator driver</value>
  </data>
  <data name="LaunchMenu_Update_DownloadFactorIdsInstruction" xml:space="preserve">
    <value>Downloading factor_ids.br from GitHub</value>
  </data>
  <data name="LaunchMenu_Update_DownloadTalentSkillInstruction" xml:space="preserve">
    <value>Downloading talentskillsets.br from GitHub</value>
  </data>
  <data name="MaximiumGradeSkillRecommendation_Caption" xml:space="preserve">
    <value>Predicted score: {0}(learned skills) + {1}(skills to be learned) + {2}(statuses) = {3}({4})</value>
  </data>
  <data name="MaximiumGradeSkillRecommendation_Columns_Grade" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="MaximiumGradeSkillRecommendation_Columns_RequireSP" xml:space="preserve">
    <value>Required Skill Points</value>
  </data>
  <data name="MaximiumGradeSkillRecommendation_Columns_SkillName" xml:space="preserve">
    <value>Skill Name</value>
  </data>
  <data name="MaximiumGradeSkillRecommendation_Title" xml:space="preserve">
    <value>Total SP: {0}, Used SP: {1}, Remaining SP: {2}</value>
  </data>
  <data name="SingleModeCheckEvent_Event_NoOption" xml:space="preserve">
    <value>NO OPTION</value>
  </data>
  <data name="SingleModeCheckEvent_Event_UnknownEffect" xml:space="preserve">
    <value>UNKNOWN EFFECT</value>
  </data>
  <data name="SingleModeCheckEvent_Event_UnknownEvent" xml:space="preserve">
    <value>UNKNOWN EVENT</value>
  </data>
  <data name="SingleModeCheckEvent_Event_UnknownOption" xml:space="preserve">
    <value>UNKNOWN OPTION @ {0}</value>
  </data>
  <data name="SingleModeCheckEvent_Event_UnknownSource" xml:space="preserve">
    <value>UNKNOWN SOURCE</value>
  </data>
  <data name="LaunchMenu_UpdateProgram" xml:space="preserve">
    <value>Update program</value>
  </data>
  <data name="LaunchMenu_InstallUraCore" xml:space="preserve">
    <value>Automatic install ura-core</value>
  </data>
  <data name="ConfigSet_LoadLocalizedData" xml:space="preserve">
    <value>Load localized data from other plugins</value>
  </data>
  <data name="LaunchMenu_SetLocalizedDataFilePath" xml:space="preserve">
    <value>Set localized data filepath</value>
  </data>
  <data name="LaunchMenu_ManageDMMService" xml:space="preserve">
    <value>Manage DMM service information</value>
  </data>
  <data name="ConfigSet_WriteAIInfo" xml:space="preserve">
    <value>Write turn stats for external plugins reading</value>
  </data>
  <data name="ConfigSet_DisableSelectIndex" xml:space="preserve">
    <value>Hide select_index</value>
  </data>
</root>